#!/bin/bash

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# üóÉÔ∏è Script para extrair arquivos multipart .7z.001, .002, etc.
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# Cores
GREEN='\e[32m'
RED='\e[31m'
YELLOW='\e[33m'
BLUE='\e[34m'
BOLD='\e[1m'
RESET='\e[0m'

# Notifica√ß√£o com som (se poss√≠vel)
notify() {
    local title="$1"
    local message="$2"

    if command -v notify-send &>/dev/null; then
        notify-send "$title" "$message"
    fi

    if command -v canberra-gtk-play &>/dev/null; then
        canberra-gtk-play -i complete &>/dev/null &
    fi
}

# Verifica depend√™ncia
if ! command -v 7z &>/dev/null; then
    echo -e "${RED}‚ùå Erro: o comando '7z' (p7zip) n√£o est√° instalado.${RESET}"
    echo -e "Instale com: ${YELLOW}sudo pacman -S p7zip${RESET} (ou equivalente)"
    exit 1
fi

# Verifica flag
FLAG="$1"
DIR="${2:-.}"

if [[ "$FLAG" != "a" && "$FLAG" != "x" ]]; then
    echo -e "${YELLOW}Uso:${RESET} $(basename "$0") [a|x] [diret√≥rio]"
    echo -e "${YELLOW}a${RESET} - extrai todos os arquivos com sequ√™ncia .7z.001"
    echo -e "${YELLOW}x${RESET} - extrai apenas arquivos √∫nicos .7z (sem sequ√™ncia)"
    exit 1
fi

# Navega at√© o diret√≥rio
cd "$DIR" || { echo -e "${RED}‚ùå Erro: n√£o foi poss√≠vel acessar o diret√≥rio '$DIR'.${RESET}"; exit 1; }

echo -e "${BLUE}üìÇ Diret√≥rio:${RESET} $PWD"

# Modo "a" - extrai arquivos com sequ√™ncia .7z.001
if [[ "$FLAG" == "a" ]]; then
    FILES=(*.7z.001)

    if [ ${#FILES[@]} -eq 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è Nenhum arquivo .7z.001 encontrado.${RESET}"
        exit 0
    fi

    for file in "${FILES[@]}"; do
        echo -e "${GREEN}üì¶ Extraindo:${RESET} ${BOLD}$file${RESET}"
        if 7z x "$file"; then
            echo -e "${GREEN}‚úÖ Extra√ß√£o conclu√≠da para:${RESET} $file"
            notify "Extra√ß√£o conclu√≠da" "$file extra√≠do com sucesso"
        else
            echo -e "${RED}‚ùå Falha ao extrair:${RESET} $file"
            notify "Erro na extra√ß√£o" "Houve um problema ao extrair $file"
        fi
    done
fi

# Modo "x" - extrai apenas arquivos .7z que n√£o t√™m sequ√™ncia
if [[ "$FLAG" == "x" ]]; then
    FILES=(*.7z)

    # Remove arquivos que fazem parte de sequ√™ncias (ex: .7z.001)
    UNIQUE_FILES=()
    for f in "${FILES[@]}"; do
        [[ "$f" =~ \.7z\.[0-9]{3}$ ]] && continue
        UNIQUE_FILES+=("$f")
    done

    if [ ${#UNIQUE_FILES[@]} -eq 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è Nenhum arquivo .7z √∫nico encontrado.${RESET}"
        exit 0
    fi

    for file in "${UNIQUE_FILES[@]}"; do
        echo -e "${GREEN}üì¶ Extraindo:${RESET} ${BOLD}$file${RESET}"
        if 7z x "$file"; then
            echo -e "${GREEN}‚úÖ Extra√ß√£o conclu√≠da para:${RESET} $file"
            notify "Extra√ß√£o conclu√≠da" "$file extra√≠do com sucesso"
        else
            echo -e "${RED}‚ùå Falha ao extrair:${RESET} $file"
            notify "Erro na extra√ß√£o" "Houve um problema ao extrair $file"
        fi
    done
fi

echo -e "${BOLD}${BLUE}üéâ Extra√ß√µes finalizadas.${RESET}"
